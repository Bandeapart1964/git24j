int git_blob_lookup(git_blob **blob, git_repository *repo, const git_oid *id);
int git_blob_lookup_prefix(git_blob **blob, git_repository *repo, const git_oid *id, size_t len);
void git_blob_free(git_blob *blob);
const git_oid * git_blob_id(const git_blob *blob);
git_repository * git_blob_owner(const git_blob *blob);
const void * git_blob_rawcontent(const git_blob *blob);
git_off_t git_blob_rawsize(const git_blob *blob);
int git_blob_filter(git_buf *out, git_blob *blob, const char *as_path, git_blob_filter_options *opts);
int git_blob_create_from_workdir(git_oid *id, git_repository *repo, const char *relative_path);
int git_blob_create_from_disk(git_oid *id, git_repository *repo, const char *path);
int git_blob_create_from_stream(git_writestream **out, git_repository *repo, const char *hintpath);
int git_blob_create_from_stream_commit(git_oid *out, git_writestream *stream);
int git_blob_create_from_buffer(git_oid *id, git_repository *repo, const void *buffer, size_t len);
int git_blob_is_binary(const git_blob *blob);
int git_blob_dup(git_blob **out, git_blob *source);
int git_blob_create_fromworkdir(git_oid *id, git_repository *repo, const char *relative_path);
int git_blob_filtered_content(git_buf *out, git_blob *blob, const char *as_path, int check_for_binary_data);
